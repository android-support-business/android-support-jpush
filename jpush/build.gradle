apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2 // 自增+1
        versionName "3.3.2" // 与极光一致
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            android.libraryVariants.all { variant ->
//                variant.outputs.all {
//                    // support-jpush-版本名称.aar
//                    outputFileName = "support-jpush-${defaultConfig.versionName}.aar"
//                }
//            }
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    // amlzq support library remote dependencies
    implementation "com.amlzq.android:log:${rootProject.ext.logVersion}"
    implementation "com.amlzq.android:annotations:${rootProject.ext.annotationsVersion}"
    implementation "com.amlzq.android:utils:${rootProject.ext.utilsVersion}"
}

// 以下是发布到本地 maven 仓库配置
// 执行 gradlew uploadArchives
apply plugin: 'maven'

// 获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

uploadArchives {
    repositories.mavenDeployer {
        repository(url: properties.getProperty("mavenLocal"))
        pom.groupId = "com.amlzq.android"
        pom.artifactId = "jpush"
        pom.version = android.defaultConfig.versionName
    }
}
